// schema.prisma

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    // url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    // directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime? @map("email_verified")
    password      String?
    createdAt     DateTime  @default(now()) @map("created_at")
    updatedAt     DateTime? @updatedAt @map("updated_at")

    @@map("user")
}

model Subject {
    id          String    @id @default(cuid())
    name        String
    description String?
    image       String?
    quizId      String?   @map("quiz_id")
    createdAt   DateTime  @default(now()) @map("created_at")
    updatedAt   DateTime? @updatedAt @map("updated_at")

    quiz    Quiz?    @relation(fields: [quizId], references: [id])
    lessons Lesson[]

    @@map("subject")
}

model Lesson {
    id        String    @id @default(cuid())
    subjectId String    @map("subject_id")
    title     String
    image     String?
    content   String    @db.Text
    quizId    String?   @map("quiz_id")
    createdAt DateTime  @default(now()) @map("created_at")
    updatedAt DateTime? @updatedAt @map("updated_at")

    subject Subject @relation(fields: [subjectId], references: [id])
    quiz    Quiz?   @relation(fields: [quizId], references: [id])

    @@map("lesson")
}

model Quiz {
    id          String    @id @default(cuid())
    subjectId   String?   @map("subject_id")
    lessonId    String?   @map("lesson_id")
    title       String?
    description String?
    image       String?
    createdAt   DateTime  @default(now()) @map("created_at")
    updatedAt   DateTime? @updatedAt @map("updated_at")

    questions Question[]
    subjects  Subject[]
    lessons   Lesson[]

    @@map("quiz")
}

model Question {
    id        String    @id @default(cuid())
    quizId    String    @map("quiz_id")
    text      String    @db.Text
    createdAt DateTime  @default(now()) @map("created_at")
    updatedAt DateTime? @updatedAt @map("updated_at")

    quiz    Quiz     @relation(fields: [quizId], references: [id])
    answers Answer[]

    @@map("question")
}

model Answer {
    id         String    @id @default(cuid())
    questionId String    @map("question_id")
    text       String    @db.Text
    isCorrect  Boolean   @default(false)
    createdAt  DateTime  @default(now()) @map("created_at")
    updatedAt  DateTime? @updatedAt @map("updated_at")

    question Question @relation(fields: [questionId], references: [id])

    @@map("answer")
}
